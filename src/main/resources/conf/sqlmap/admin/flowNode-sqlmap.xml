<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.v4java.workflow.dao.admin.FlowNodeDao" >

  <resultMap id="flowNode-resultMap" type="flowNode" >
  
    <id 	column="ID" 				property="id" 			jdbcType="INTEGER" />
    <result column="JOBS_ID" 			property="jobsId" 		jdbcType="INTEGER" />
    <result column="MODEL_ID" 			property="modelId" 		jdbcType="INTEGER" />
    <result column="NODE_TYPE" 			property="nodeType" 	jdbcType="INTEGER" />
    <result column="FLOW_TEST" 			property="flowTest" 	jdbcType="VARCHAR" />
	
	<result column="SORT" 				property="sort" 		jdbcType="INTEGER" />
    <result column="NEXT_SORT" 			property="nextSort" 	jdbcType="INTEGER" />
    <result column="NAME" 				property="name" 		jdbcType="VARCHAR" />
    <result column="DESCRIPTION" 		property="description" 	jdbcType="VARCHAR" />
    <result column="CREATE_TIME" 		property="createTime" 	jdbcType="TIMESTAMP" />
    
    <result column="UPDATE_TIME" 		property="updateTime" 	jdbcType="TIMESTAMP" />
    <result column="STATUS" 			property="status" 		jdbcType="INTEGER" />
    <!--  -->
  </resultMap>
  
    <resultMap id="flowNodeVO-resultMap" type="flowNodeVO" extends="flowNode-resultMap">
    <!--  -->
  </resultMap>
  
  
  <select id="findFlowNodeVO" parameterType="flowNodeQuery" resultMap="flowNodeVO-resultMap">
  	SELECT
  			ID,JOBS_ID,MODEL_ID,NODE_TYPE,FLOW_TEST ,STATUS,
  			NEXT_SORT,SORT,NAME,DESCRIPTION,CREATE_TIME,
  			UPDATE_TIME
    FROM			
  			flow_node
  	WHERE
  			MODEL_ID = #{modelId}
  	ORDER BY 
  			sort ASC
	<if test="limit != null and offset != null">
		  	LIMIT   #{offset} ,#{limit} 		
	</if>	
  </select>
  
   <select id="findFlowNodeVOCount" parameterType="flowNodeQuery" resultType="int">
  	SELECT
  			COUNT(ID)
    FROM			
  			flow_node
  	WHERE
  			MODEL_ID = #{modelId} 			
  </select>
  
   <select id="findFirstFlowNodeById" parameterType="java.lang.Integer" resultMap="flowNode-resultMap">
  	SELECT
  			ID,JOBS_ID,MODEL_ID,NODE_TYPE,FLOW_TEST ,
  			NEXT_SORT,SORT,NAME,DESCRIPTION,STATUS
    FROM			
  			flow_node
  	WHERE
  			MODEL_ID = #{modelId}
  	ORDER BY 
  			SORT ASC
  	LIMIT 0 ,1
  </select>
  
   <select id="findFlowNodeById" parameterType="java.lang.Integer" resultMap="flowNode-resultMap">
  	SELECT
  			ID,JOBS_ID,MODEL_ID,NODE_TYPE,FLOW_TEST,
  			NEXT_SORT,SORT,NAME,DESCRIPTION,STATUS
  	FROM			
  			flow_node
  	WHERE
  			ID = #{id}
  </select>
  
  <insert id="insertFlowNode" parameterType="flowNode">
  	INSERT INTO  flow_node(
  			JOBS_ID,MODEL_ID,NODE_TYPE,FLOW_TEST,
  			NEXT_SORT,SORT,NAME,DESCRIPTION,STATUS,
  			CREATE_TIME)
  	SELECT		
  			#{jobsId},#{modelId},#{nodeType},#{flowTest},
  			#{nextSort},#{sort},#{name},#{description},#{status},now()
  	FROM
  			dual
	  	
	  	WHERE NOT EXISTS
	  			(SELECT 
	  				id 
	  			FROM 
	  				flow_node 
	  			WHERE 
	  				MODEL_ID = #{modelId} 
	  			AND 
	  				SORT = #{sort} 
	  			AND 
	  				STATUS = 0 )		
  </insert>

  <update id="updateFlowNode" parameterType="flowNode">
  	UPDATE 
  			FLOW_NODE
  	<set>
  		<if test="jobsId != null">
			JOBS_ID	= #{jobsId}  ,				
  		</if>
  		<if test="nodeType != null">
  			NODE_TYPE = #{nodeType},
  		</if>
  		<if test="flowTest != null">
  			FLOW_TEST = #{flowTest},
  		</if>
  		<if test="sort != null">
  			SORT = #{sort},
  		</if>
		<if test="nextSort != null">
  			NEXT_SORT = #{nextSort},
  		</if>  	
 		<if test="name != null">
  			NAME = #{name},
  		</if> 
 		<if test="description != null">
  			DESCRIPTION = #{description} ,
  		</if>  	 		
  			UPDATE_TIME = now()
  	</set>	
  	WHERE
  			ID = #{id}
  </update>
  
  <select id="findNextSortCountBySort" parameterType="flowNode" resultType="int">
  
 	 SELECT 
  	  			COUNT(*)
  	 FROM
  	  		  flow_node
 	  WHERE
  	  		  NEXT_SORT = (SELECT SORT FROM flow_node WHERE ID = #{id})
  	 AND
  	 		  MODEL_ID = (SELECT MODEL_ID FROM flow_node WHERE ID = #{id} )
  	 FOR 
  	 		UPDATE
  	 		
  </select>
  
 	<update id="updateFlowNodeStatus" parameterType="flowNode">
 	  UPDATE 
  			flow_node
  	  SET
  			STATUS = #{status},
  			UPDATE_TIME = now()
  	  WHERE
  	  		NODE_TYPE != 0
  	  AND 
  	  		ID = #{id}		  								
 	</update> 
  
</mapper>