<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.v4java.workflow.dao.admin.FlowNodeDao" >

  <resultMap id="flowNode-resultMap" type="flowNode" >
  
    <id 	column="id" 				property="id" 			jdbcType="INTEGER" />
    <result column="jobs_id" 			property="jobsId" 		jdbcType="INTEGER" />
    <result column="model_id" 			property="modelId" 		jdbcType="INTEGER" />
    <result column="node_type" 			property="nodeType" 	jdbcType="INTEGER" />
    <result column="flow_test" 			property="flowTest" 	jdbcType="VARCHAR" />
	
	<result column="sort" 				property="sort" 		jdbcType="INTEGER" />
    <result column="next_sort" 			property="nextSort" 	jdbcType="INTEGER" />
    <result column="name" 				property="name" 		jdbcType="VARCHAR" />
    <result column="description" 		property="description" 	jdbcType="VARCHAR" />
    <result column="create_time" 		property="createTime" 	jdbcType="TIMESTAMP" />
    
    <result column="update_time" 		property="updateTime" 	jdbcType="TIMESTAMP" />
    <result column="status" 			property="status" 		jdbcType="INTEGER" />
    <!--  -->
  </resultMap>
  
    <resultMap id="flowNodeVO-resultMap" type="flowNodeVO" extends="flowNode-resultMap">
    <!--  -->
  </resultMap>
  
  
  <select id="findFlowNodeVO" parameterType="flowNodeQuery" resultMap="flowNodeVO-resultMap">
  	select
  			id,jobs_id,model_id,node_type,flow_test ,status,
  			next_sort,sort,name,description,create_time,
  			update_time
    from			
  			flow_node
  	where
  			model_id = #{modelId}
  	order by 
  			sort ASC
	<if test="limit != null and offset != null">
		  	limit   #{offset} ,#{limit} 		
	</if>	
  </select>
  
   <select id="findFlowNodeVOCount" parameterType="flowNodeQuery" resultType="int">
  	select
  			count(id)
    from			
  			flow_node
  	where
  			model_id = #{modelId} 			
  </select>
  
   <select id="findFirstFlowNodeById" parameterType="java.lang.Integer" resultMap="flowNode-resultMap">
  	select
  			id,jobs_id,model_id,node_type,flow_test ,
  			next_sort,sort,name,description,status
    from			
  			flow_node
  	where
  			model_id = #{modelId}
  	order by 
  			sort ASC
  	limit 0 ,1
  </select>
  
   <select id="findFlowNodeById" parameterType="java.lang.Integer" resultMap="flowNode-resultMap">
  	select
  			id,jobs_id,model_id,node_type,flow_test
  			next_sort,sort,name,description,status
  	from			
  			flow_node
  	where
  			id = #{id}
  </select>
  
  <insert id="insertFlowNode" parameterType="flowNode">
  	insert into  flow_node(
  			jobs_id,model_id,node_type,flow_test,
  			next_sort,sort,name,description,status)
  	select		
  			#{jobsId},#{modelId},#{nodeType},#{flowTest},
  			#{nextSort},#{sort},#{name},#{description},#{status}
  	from
  			dual
	  	
	  	WHERE NOT EXISTS
	  			(SELECT 
	  				id 
	  			from 
	  				flow_node 
	  			where 
	  				model_id = #{modelId} 
	  			and 
	  				sort = #{sort} 
	  			and 
	  				status = 0 )		
  </insert>
  
<!--   <select id="findNodeTypeCount" resultType="int" parameterType="flowNodeQuery" >
  	select 
  			count(*)
  	from	
  			flow_node
  	where 
  			model_id = #{modelId}
  	and
  			node_type = #{nodeType}						
  </select> -->
  <update id="updateFlowNode" parameterType="flowNode">
  	update 
  			flow_node
  	<set>
  		<if test="jobsId != null">
			jobs_id	= #{jobsId}  ,				
  		</if>
  		<if test="modelId != null">
  			model_id = #{modelId},
  		</if>
  		<if test="nodeType != null">
  			node_type = #{nodeType},
  		</if>
  		<if test="flowTest != null">
  			flow_test = #{flowTest},
  		</if>
  		<if test="sort != null">
  			sort = #{sort},
  		</if>
		<if test="nextSort != null">
  			next_sort = #{nextSort},
  		</if>  	
 		<if test="name != null">
  			name = #{name},
  		</if> 
 		<if test="description != null">
  			description = #{description} ,
  		</if>  	 		
   		<if test="status != null">
  			status = #{status} ,
  		</if>  	 		 	
  			update_time = now()
  	</set>	
  	where
  			id = #{id}
  </update>
  
</mapper>